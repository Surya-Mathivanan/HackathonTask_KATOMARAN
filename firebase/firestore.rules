rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to validate task data
    function isValidTask(data) {
      return data.size() > 0 
        && 'userId' in data 
        && 'title' in data 
        && 'dueDate' in data 
        && 'priority' in data;
    }

    // Tasks collection rules
    match /tasks/{taskId} {
      // Allow read if user is authenticated and owns the task
      allow read: if request.auth != null 
        && resource.data.userId == request.auth.uid;

      // Allow create if user is authenticated and task data is valid
      allow create: if request.auth != null 
        && isValidTask(request.resource.data)
        && request.resource.data.userId == request.auth.uid;

      // Allow update if user owns the task and isn't changing ownership
      allow update: if request.auth != null 
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == request.auth.uid;

      // Allow delete if user owns the task
      allow delete: if request.auth != null 
        && resource.data.userId == request.auth.uid;
    }

    // Deny access to all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 